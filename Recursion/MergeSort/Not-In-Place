import java.util.Arrays;
public class MergeSort
{
    public static void main(String[] args)
    {
        int[] array = {8, 3, 4, 12, 5, 6};
        int[] sorted = mergeSort(array);
        System.out.println(Arrays.toString(sorted));
    }
    
    static int[] mergeSort(int[] array)
    {
        if(array.length == 1)
        {
            return array;
        }
        
        int middle = array.length / 2;
        
        int[] left = Arrays.copyOfRange(array, 0, middle);
        
        int[] right = Arrays.copyOfRange(array, middle, array.length);
        
        left = mergeSort(left);
        
        right = mergeSort(right);
        
        int[] result = merge(left, right);
        
        return result; 
    }
    
    static int[] merge(int[] left, int[] right)
    {
        int[] result = new int[left.length + right.length];
        
        int i = 0;
        int j = 0;
        int k = 0;
        
        while(i < left.length && j < right.length)
        {
            if(left[i] < right[j])
            {
            result[k] = left[i];
            i++;
            }
            else
            {
                result[k] = right[j];
                j++;
            }
            k++;
        }
        
        while(i < left.length)
        {
            result[k] = left[i];
            i++;
            k++;
        }
        
        while(j < right.length)
        {
            result[k] = right[j];
            j++;
            k++;
        }
        
        return result;
    }
}
