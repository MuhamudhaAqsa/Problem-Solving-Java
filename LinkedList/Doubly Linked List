public class Main
{
    public static void main(String[] args)
    {
        DLL list = new DLL();
        list.insertFirst(5);
        list.insertFirst(4);
        list.insertFirst(3);
        list.insertFirst(2);
        list.insertFirst(1);
        list.insertLast(6);
        list.insertAtIndex(7, 5);
        list.insert(3, 18);
        list.display();
        list.displayRev();
    }
}

class DLL
{
    private Node head;
    
    public void insertFirst(int val)
    {
        Node node = new Node(val);
        
        if(head == null)
        {
            head = node;
            return;
        }
    
        node.next = head;
        head.prev = node;
        head = node;
    }
    
    public void insertLast(int val)
    {
        Node node = new Node(val);
        
        if(head == null)
        {
            head = node;
            return;
        }
        
        Node temp = head;
        while(temp.next != null)
        {
            temp = temp.next;
        }
        
        temp.next = node;
        node.prev = temp;
    }
    
    public void insertAtIndex(int val, int index)
    {
        if(index == 0)
        {
            insertFirst(val);
            return;
        }
        
        Node temp = head;
        for(int i = 1 ; i < index ; i++)
        {
            temp = temp.next;
        }
        
        Node node = new Node(val, temp.next, temp);
        
        temp.next = node;
        node.next.prev = node;
        
    }
    
    public void insert(int after, int val)
    {
        Node temp = head;
        while(temp != null)
        {
            if(temp.value == after)
            {
                Node node = new Node(val, temp.next, temp);
                temp.next = node;
                node.next.prev = node;
            }
            temp = temp.next;
        }
    }
    
    public void display()
    {
        Node temp = head;
        while(temp != null)
        {
            System.out.print(temp.value + " " + "->" + " ");
            temp = temp.next;
        }
        System.out.println("END");
    }
    
    public void displayRev()
    {
        Node temp = head;
        while(temp.next != null)
        {
            temp = temp.next;
        }
        while(temp != null)
        {
            System.out.print(temp.value + " " + "<-" + " ");
            temp = temp.prev;
        }
        System.out.println("START");
    }
    
    class Node
    {
        private int value;
        private Node next;
        private Node prev;
        
        Node (int val)
        {
            this.value = val;
        }
        
        Node (int val, Node next, Node prev)
        {
            this.value = val;
            this.next = next;
            this.prev = prev;
        }
        
        
        
    }
    
}
